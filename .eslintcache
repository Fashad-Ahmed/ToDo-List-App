[{"E:\\WEB\\React JS\\dase\\todo-list\\src\\index.js":"1","E:\\WEB\\React JS\\dase\\todo-list\\src\\reportWebVitals.js":"2","E:\\WEB\\React JS\\dase\\todo-list\\src\\config\\firebase.js":"3","E:\\WEB\\React JS\\dase\\todo-list\\src\\component\\top.js":"4","E:\\WEB\\React JS\\dase\\todo-list\\src\\App.js":"5"},{"size":339,"mtime":1608978672368,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":573,"mtime":1608727310808,"results":"9","hashOfConfig":"7"},{"size":406,"mtime":1608975256451,"results":"10","hashOfConfig":"7"},{"size":2630,"mtime":1608979674332,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"jdepdb",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"E:\\WEB\\React JS\\dase\\todo-list\\src\\index.js",[],["24","25"],"E:\\WEB\\React JS\\dase\\todo-list\\src\\reportWebVitals.js",[],"E:\\WEB\\React JS\\dase\\todo-list\\src\\config\\firebase.js",[],"E:\\WEB\\React JS\\dase\\todo-list\\src\\component\\top.js",[],"E:\\WEB\\React JS\\dase\\todo-list\\src\\App.js",["26","27","28"],"import React, { Component } from 'react';\nimport './App.css';\nimport ButtonLink from './component/top.js';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      todos: [],\n      value: ''\n    }\n  }\n\n  addTodo = () => {\n    let obj = { title: this.state.value };\n    this.setState({\n      // todos: this.state.todos,   setstate--> because of render(each time)\n      todos: [...this.state.todos, obj],\n      value: ''\n    }\n    )\n  }\n\n  delTodo = (index) => {\n    this.state.todos.splice(index, 1)\n    this.setState({\n      todos: this.state.todos\n    })\n  }\n\n  editTodo = (index, val) => {\n\n    // var updatedValue = prompt('Enter Updated Task ');   // by prompt\n    // this.state.todos = updatedValue;\n    this.state.todos[index].edit = true;                                                    // let obj = { title: this.state.value };\n    this.setState({\n      todos: this.state.todos\n    })\n  }\n\n  seeChange = (e, index) => {\n    this.state.todos[index].title = e.target.value;\n    this.setState({\n      todos: this.state.todos\n    })\n  }\n\n  updateTask = (index) => {\n    this.state.todos[index].edit = false;\n    this.setState({\n      todos: this.state.todos\n    })\n  }\n\n  removeAll = () => {\n    this.setState({\n      todos: []\n    })\n  }\n\n  render() {\n    let { todos, value } = this.state;\n\n    return (\n      <>\n        <div className=\"container \">\n          <ButtonLink /> <br />\n          <input className=\"fi\" value={value} onChange={(e) => this.setState({ value: e.target.value })} type=\"text\" placeholder=\"enter task\" />\n          <button className=\"topB\" class=\"btn btn-outline-primary btn-lg\" onClick={this.addTodo}> Add Item </button>\n          <button className=\"topB\" class=\"btn btn-outline-danger btn-lg\" onClick={this.removeAll}> Delete All </button>\n          <section className=\"contq\">   <ul>\n            {todos.map((values, i) => {\n              return <li key={i} >\n                {values.edit ? <input className=\"sci\" value={values.title} type=\"text\" onChange={(e) => this.seeChange(e, i)} /> : values.title}\n                <br />\n                {values.edit ?\n                  <button type=\"button\" class=\"btn btn-dark\" onClick={() => this.updateTask(i)}> Update </button>\n                  :\n                  <button type=\"button\" class=\"btn btn-success\" onClick={() => this.editTodo(i, values.title)}> Edit </button>\n                }\n                <button type=\"button\" class=\"btn btn-danger\" onClick={() => this.delTodo(i)}> Delete </button>\n              </li>\n            })}\n          </ul> </section>\n        </div>\n      </>\n    )\n  }\n}\nexport default App;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":35,"column":5,"nodeType":"35","endLine":35,"endColumn":28},{"ruleId":"33","severity":1,"message":"34","line":42,"column":5,"nodeType":"35","endLine":42,"endColumn":28},{"ruleId":"33","severity":1,"message":"34","line":49,"column":5,"nodeType":"35","endLine":49,"endColumn":28},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]